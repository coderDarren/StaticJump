using System;
using System.Collections.Generic;
using Sce.PlayStation.Core;
using Sce.PlayStation.Core.Graphics;
using Sce.PlayStation.Core.Imaging;

namespace StaticJump
{
	public abstract class Enemy : GameObject
	{
		public const float FALL_SPEED = 5.5f; //used when the enemy dies
		
		public enum State { Alive, Dead };
		public enum Anim { Flying, Shooting, Electrocuted, Falling, None };
		public State currState;
		public Anim currAnim;
		
		private GraphicsContext graphics;
		protected Sprite e;
		protected Projectile p; //each enemy will have their projectile
		protected List<Projectile> projectiles; 
		public static Random randFireRate;
		private float hp;
		
		public Enemy(GraphicsContext gc, Vector3 pos, Texture2D tex, string id, float hp) : base (gc, pos, tex, id)
		{
			graphics = gc;
			projectiles = new List<Projectile>();
			e = new Sprite(graphics, tex);
			e.Center = new Vector2(0.5f, 0.5f);
			Pos = pos;
			e.Position = Pos;
			this.hp = hp;
			randFireRate = new Random();
		}
		
		
		public virtual void Update()
		{
			e.Position = Pos;
		}
		
		public abstract void UpdateAlive();
		
		public abstract void UpdateDead();

		public void Render()
		{
			foreach(Projectile proj in projectiles)
				proj.Render();
			
			e.Render();
		}
	}
}
